name: Snapshot continuous release
on:
  schedule:
    # Runs at 07:20 UTC on the 11th of every month. 
    - cron:  '20 7 11 * *'
  workflow_dispatch:
    inputs:
      new_release_name:
        description: Name of the new release
        required: false
        type: string
jobs:
  snapshot:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set ENV vars
        run: |
          NEW_RELEASE_NAME=${{ github.event.inputs.new_release_name }}
          echo "NEW_RELEASE_NAME=${NEW_RELEASE_NAME:-$(date +%Y-%m-%d)}" >> $GITHUB_ENV
        
      - name: Refresh tag (delete and create)
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            try {
                await github.git.deleteRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: "tags/${{ env.NEW_RELEASE_NAME }}"
                })
            } catch (e) {
              console.log("Tag '${{ env.NEW_RELEASE_NAME }}' does not exist yet? Error: " + e)
            }
            await github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ env.NEW_RELEASE_NAME }}",
              sha: context.sha
            })
        
      - name: Download continuous release assets
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: ${{ github.repository }}
          version: 'tags/continuous'
          file: ".*\\.AppImage"
          target: "./"
          regex: true
      
      - name: ls for the logs
        run: ls -al
      
      - name: Create snapshot release
        uses: "ncipollo/release-action@v1"
        with:
          tag: ${{ env.NEW_RELEASE_NAME }}
          name: ${{ env.NEW_RELEASE_NAME }}
          prerelease: false
          draft: false
          bodyFile: .github/SNAPSHOTRELEASE.md
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: "*.AppImage"
          artifactContentType: application/vnd.appimage
